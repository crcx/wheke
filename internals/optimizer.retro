( Compiler Optimizations for Retro 10                         )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( This is an experimental set of extensions to the core Retro )
( compiler. The words are extended in various ways with the   )
( goal of generating faster, tighter machine code. It should  )
( be noted that this isn't flawless, and may generate bad     )
( code. Use it at your own risk.                              )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Copyright [c] 2009, Charles Childers                        )
( License: ISC                                                )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )


( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Extend ; and ;; to eliminate tail calls                     )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
{
  : opt-then ` then 0 , ;
  : call? here 1- 1- dup 1- @ swap @ 7 = swap 1 <> ;
  : call->jump 8 here 1- 1- ! ;
  : opt-;; ( - ) call? =if call->jump ;; then 9 , ;
  : opt-;  ( - ) call? =if call->jump ` [ ;; then 9 , ` [ ;
  ' opt-then is then
  ' opt-;  is ;
  ' opt-;; is ;;
}
